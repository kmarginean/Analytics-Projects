* Assignment 5 example;
libname orion '/home/ssvasan77/ecourse';
data ames; set orion.ames_housing;

ods graphics on;


data temp; set ames;
TotalFlrSF = FirstFlrSF + SecondFlrSF; 
houseage = YrSold - YearBuilt;
TotalBath = FullBath + HalfBath + BsmtFullBath + BsmtHalfBath;

data temp; set temp; keep TotalFlrSF GrLivArea houseage Zoning LotShape OverallQual
HouseStyle Alley FullBath LotArea SalePrice BldgType BsmtFinSF1 TotalBath;

** creating transformed variables & dummy variables;

data temp; set temp;
LogSalePrice = log(SalePrice);
LogTotalFlrSF = log(TotalFlrSF);


********* Task 1 ;
data temp; set temp;
If HouseStyle = '1Story' then StyleCategory = 1;
 else If HouseStyle = '2Story' then StyleCategory = 2; 
   else StyleCategory = 0;
** Note: This is the WRONG WAY! We are 'randomly' assigning 0,1,2;

 proc sort; by StyleCategory;	
 proc means; var SalePrice; by StyleCategory; run;
 *proc gplot; *plot SalePrice*TotalFlrSF=StyleCategory;*run;
 proc reg data=temp;
model SalePrice = StyleCategory;
title 'Model 1 - SLR with StyleCategory - WRONG way!';
output out=fitted_model pred=yhat residual=resid 
ucl=ucl lcl=lcl cookd=cook covratio=cov dffits=dfits press=prss;
run;

** y = 147706 + 30045 X .. yhat = 147706, 177751, 207796.. Line does NOT thru means;
**********;

** task 2 - Correct way to do this is by using Dummy variables;

data temp; set temp;
If HouseStyle = '1Story' then Style1 = 1; else Style1 = 0;
If HouseStyle = '2Story' then Style2 = 1; else Style2 = 0;
** Note: For Story 1, Style1=1 & Style2=0.. For Story 2, Stlye1=0 and Style2 =1;
** For all other stories, Style1=Style2=0;

proc reg data=temp;
model SalePrice = Style1 Style2;
title 'Model 2 - MLR with Style1 & Style2 - Correct way!';
output out=fitted_model pred=yhat residual=resid 
ucl=ucl lcl=lcl cookd=cook covratio=cov dffits=dfits press=prss;
run;


** y = 146485 + 32215*Style1 + 60505*Style2
 yhat = 146485, 178700, 206990.. Plane DOES pass thru means;
 ** Note that when Style1=Style2=0, then yhat=146485=intercept (baseline);
** When Style1=1 & Style2=0 then yhat = 146485+32215=178700;
** When Style1=0 & Style2=0 then yhat = 146485+60505 = 206990;
**********;


** Task 3 - report;

** task 4;

data temp; set temp;
If Zoning = 'RL' then Zone1 = 1; else Zone1 = 0;
If Zoning = 'RM' then Zone2 = 1; else Zone2 = 0;

*** Task 5 Stepwise - Default for SLentry and SLstay are 0.15;
Proc Reg data=temp outest=stepwise_summary;
	Title 'Stepwise Regression';
	model LogSalePrice = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath Style1 Style2 Zone1 Zone2/ 
        selection = stepwise slentry=0.01 slstay=0.01 AIC VIF BIC MSE;
        output out=stepwise_out pred=yhat residual = resid ucl=ucl lcl=lcl cookd=cook
	covratio=cov dffits=dfits press=prss;
run;
proc print data=stepwise_summary;

** Note that Zone1 is included & Zone2 is NOT included;
*** Task 5 revised;
Proc Reg data=temp outest=stepwise_summary;
	Title 'Stepwise Revised with groups';
	model LogSalePrice = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath {Style1 Style2} {Zone1 Zone2}/ 
        selection = stepwise AIC VIF BIC MSE groupnames = 'Style' 'Zone';
        output out=stepwise_out pred=yhat residual = resid ucl=ucl lcl=lcl cookd=cook
	covratio=cov dffits=dfits press=prss;
run;

*** Task 6;
Proc Reg data=temp outest=stepwise_summary;
	Title 'Stepwise with Style group';
	model LogSalePrice = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath {Style1 Style2}/ 
        selection = stepwise AIC VIF BIC MSE groupnames = 'Style';
        output out=stepwise_out pred=yhat residual = resid ucl=ucl lcl=lcl cookd=cook
	covratio=cov dffits=dfits press=prss;
run;

/*
** experiment to show partial F test info;
Proc Reg data=temp outest=reg_summary;
	Title '';
	model SalePrice = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath Style1 Style2;
run;
Proc Reg data=temp outest=reg_summary;
	Title '';
	model SalePrice = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath;
run;
*/


** Task 7;
* Defining training set (70% of the data) & test set (30% of the data);
* We have created a variable called train_response which is same as log sale price
* except that we have defined it as 'missing value' for the test set;

data temp2;
set temp;
* generate a uniform(0,1) random variable with seed set to 123; 
u = uniform(123);
if (u < 0.70) then train = 1;
else train = 0;
if (train=1) then train_response=LogSalePrice; else train_response=.;
title '';
run;

proc print data=temp2(obs=5); run;

** task 8  ;
Proc Reg data=temp2 outest=stepwise_summary;
	Title 'Stepwise - Training data';
	model train_response = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath {Style1 Style2}/ 
        selection = stepwise AIC VIF BIC MSE groupnames = 'Style';
        output out=stepwise_out pred=yhat residual = resid ucl=ucl lcl=lcl cookd=cook
	covratio=cov dffits=dfits press=prss;
run;
proc print data=stepwise_summary; run;
proc print data=stepwise_out(obs=5); run;

** task 9;
data stepwise_out; set stepwise_out;
if train=1 then do;
absolute_error = abs(resid);
square_error = resid*resid; end;
if train=0 then do;
absolute_error = abs(LogSalePrice-yhat);
square_error = (LogSalePrice-yhat)*(LogSalePrice-yhat); end;


proc means data=stepwise_out nway noprint;
Title '';
class train;
var square_error absolute_error;
output out=stepwise_error 
	mean(square_error)=MSE_1
	mean(absolute_error)=MAE_1;
run; quit;

proc print data=stepwise_error; run;

** Task 10  ;
data stepwise_out; set stepwise_out;

if yhat >= log(SalePrice *0.9) and yhat <= log(SalePrice *1.1) then
	Prediction_Grade="Grade 1";
	else if yhat >= log(SalePrice *0.85) and yhat <= log(SalePrice *1.15) then
	Prediction_Grade="Grade 2";
	else Prediction_Grade="Grade 3";
	
proc sort data=stepwise_out; by train;
Proc freq data=stepwise_out; tables prediction_grade; by train; run;

** task 11; 
** In real life, you will go thru the whole model building process
including outliers, DFFITS, etc. before finalizing the model;
proc reg data=temp;
model LogSalePrice = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath Style1 Style2/vif;
title 'Task 11 Model';
output out=fitted_model pred=yhat residual=resid 
ucl=ucl lcl=lcl cookd=cook covratio=cov dffits=dfits press=prss;
run;

** task 12 - overall conclusions;

/*
Proc Reg data=temp;
	Title 'SLR';
	model SalePrice = TotalFlrSF;
        output out=dummy_out pred=yhat residual = resid ucl=ucl lcl=lcl cookd=cook
	covratio=cov dffits=dfits press=prss;
run;

proc reg data=temp;
model SalePrice = TotalFlrSF Style1 Style2;
title 'Model - MLR with Total Floor SF & Style1 & Style2';
output out=fitted_model pred=yhat residual=resid 
ucl=ucl lcl=lcl cookd=cook covratio=cov dffits=dfits press=prss;
run;


Proc Reg data=temp;
	Title 'MLR with 2 dummies';
	model SalePrice = TotalFlrSF Style1 Style2/ss1 ss2;
	test Style1=Style2=0;
        output out=dummy_out pred=yhat residual = resid ucl=ucl lcl=lcl cookd=cook
	covratio=cov dffits=dfits press=prss;
run;
*/



** This code will provide h values for the test set; 
** You may use this code to check for 'hidden' extrapolation;
/*
proc reg data=temp2;
model train_response = TotalFlrSF houseage OverallQual
        LotArea BsmtFinSF1 TotalBath Style1 Style2/influence;
title 'Task 11 Model';
output out=fitted_model pred=yhat h=hat residual=resid 
ucl=ucl lcl=lcl cookd=cook covratio=cov dffits=dfits press=prss;
run;


/
